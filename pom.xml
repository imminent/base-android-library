<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.imminentmeals.android</groupId>
    <artifactId>base-android-library-parent</artifactId>
    <version>0.3-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Base Android Library Parent</name>    

    <scm> 
		<url>https://github.com/imminent/base-android-library</url>
		<connection>scm:git:git://github.com/imminent/base-android-library.git</connection>
		<developerConnection>scm:git:git@github.com:imminent/base-android-library.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <email>dandre.allison@imminentmeal.com</email>
            <name>Dandre Allison</name>
            <url>https://github.com/imminent</url>
            <id>dandre</id>
        </developer>
    </developers>

    <modules>
        <module>app</module>
    </modules>

    <properties>
		<!-- Android Dependencies -->
        <java.version>1.6</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <android.version>4.2_r1</android.version>
		<android.version_code>17</android.version_code>
		<android-test.version>4.1.1.4</android-test.version>
		<!-- Needs to be specified locally based on where Android is installed -->
        <ndk.path>${env.ANDROID_NDK_HOME}</ndk.path>
    	
		<!-- Testing Dependencies -->
		<robolectric.version>2.0-alpha-2</robolectric.version>
		<hamcrest-core.version>1.3</hamcrest-core.version>
		<mockito-core.version>1.9.5</mockito-core.version>
		<dexmaker.version>1.0</dexmaker.version>
		<dexmaker-mockito.version>1.0</dexmaker-mockito.version>
		<mockwebserver.version>20130303</mockwebserver.version>
		<robotium.version>4.0</robotium.version>
		<spoon.version>1.0.1</spoon.version>
		<fest-android.version>1.0.3</fest-android.version>
		<junit.version>4.8.2</junit.version>
		
		<!-- Plugins -->
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<android-maven-plugin.version>3.6.0</android-maven-plugin.version>
		<cobertura.version>2.5.2</cobertura.version>
		<maven-pmd-plugin.version>2.7.1</maven-pmd-plugin.version>
		<findbugs-maven-plugin.version>2.5.2</findbugs-maven-plugin.version>
		<maven-checkstyle-plugin.version>2.9.1</maven-checkstyle-plugin.version>
		<lint-maven-plugin.version>0.0.6</lint-maven-plugin.version>
		<eclipse-lifecycle-plugin.version>1.0.0</eclipse-lifecycle-plugin.version>

		<!-- Sonar common configuration -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jdbc.url>jdbc:postgresql://localhost/sonar</sonar.jdbc.url>
		<sonar.jdbc.driverClassName>org.postgresql.Driver</sonar.jdbc.driverClassName>
		<sonar.jdbc.username>sonar</sonar.jdbc.username>
    	<sonar.jdbc.password>sonar</sonar.jdbc.password>
    </properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>android</groupId>
				<artifactId>android</artifactId>
				<version>${android.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.android</groupId>
				<artifactId>android-test</artifactId>
				<version>${android-test.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Testing -->
			<dependency>
				<groupId>org.robolectric</groupId>
				<artifactId>robolectric</artifactId>
				<version>${robolectric.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest-core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito-core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.dexmaker</groupId>
				<artifactId>dexmaker</artifactId>
				<version>${dexmaker.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.dexmaker</groupId>
				<artifactId>dexmaker-mockito</artifactId>
				<version>${dexmaker-mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.mockwebserver</groupId>
				<artifactId>mockwebserver</artifactId>
				<version>${mockwebserver.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jayway.android.robotium</groupId>
				<artifactId>robotium-solo</artifactId>
				<version>${robotium.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.spoon</groupId>
				<artifactId>spoon-client</artifactId>
				<version>${spoon.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup</groupId>
				<artifactId>fest-android</artifactId>
				<version>${fest-android.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
    
    <build>
        <pluginManagement>
            <plugins>
                <!-- Android Maven Plugin builds Android apps through Maven build management -->
                <plugin>
                    <extensions>true</extensions>
	                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
	                <artifactId>android-maven-plugin</artifactId>
	                <version>${android-maven-plugin.version}</version>
	                <configuration>
	                    <sdk>
	                        <platform>${android.version_code}</platform>
	                    </sdk>
	                    <proguard>
	                        <skip>false</skip>
	                        <config>../proguard.cfg</config>
	                    </proguard>
	                    <manifest>
	                        <versionName/>
	                        <!-- defaults to Maven project version -->
	                        <versionCodeUpdateFromVersion>true</versionCodeUpdateFromVersion>
	                    </manifest>
	                    <lint>
	                        <failOnError>true</failOnError>
	                        <skip>true</skip>
	                    </lint>
	                    <!-- Installs app as fresh each time -->
	                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
	                </configuration>
	                <!-- <executions>
						<execution>
							<id>lint</id>
							<goals>
								<goal>lint</goal>
							</goals>
							<phase>install</phase>
	                   	</execution>
	                </executions> -->
                </plugin>
				<!-- This plugin is the compiler used by Maven -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				
				<!-- Quality Analysis Tools -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<configLocation>checkstyle.xml</configLocation>
						<enableRulesSummary>false</enableRulesSummary>
					</configuration>
					<!-- <executions>
						<execution>
							<id>checkstyle-check</id>
							<phase>process-sources</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions> -->
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs-maven-plugin.version}</version>
					<configuration>
						<excludeFilterFile>findbugs-filter.xml</excludeFilterFile>
						<includeFilterFile>findbugs-include.xml</includeFilterFile>
						<failOnError>false</failOnError>
					</configuration>
					<!-- <executions>
						<execution>
							<id>findbugs-check</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions> -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
					<configuration>
						<targetJdk>${java.version}</targetJdk>
						<ruleset>pmd.xml</ruleset>
					</configuration>
					<!-- <executions>
						<execution>
							<id>pmd-check</id>
							<goals>
								<goal>check</goal>
								<goal>cpd-check</goal>
							</goals>
						</execution>
					</executions> -->
				</plugin>
				<plugin>
					<groupId>com.lewisd</groupId>
					<artifactId>lint-maven-plugin</artifactId>
					<version>${lint-maven-plugin.version}</version>
					<!-- <executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions> -->
				</plugin>
				<!-- Eclipse config -->
				<!-- WORKAROUND: http://stackoverflow.com/questions/13040788/how-to-elimate-the-maven-enforcer-plugin-goal-enforce-is-ignored-by-m2e-wa -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${eclipse-lifecycle-plugin.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.lewisd</groupId>
										<artifactId>lint-maven-plugin</artifactId>
										<versionRange>[${lint-maven-plugin.version},)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
								    <pluginExecutionFilter>
								        <groupId>org.apache.maven.plugins</groupId>
								        <artifactId>maven-checkstyle-plugin</artifactId>
								        <versionRange>[${maven-checkstyle-plugin.version},)</versionRange>
								        <goals>
								            <goal>check</goal>
								        </goals>
								    </pluginExecutionFilter>
								    <action>
								        <ignore />
								    </action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.jayway.maven.plugins.android.generation2</groupId>
										<artifactId>android-maven-plugin</artifactId>
										<versionRange>[3.0.0,)</versionRange>
										<goals>
											<goal>manifest-update</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<configurator>
											<id>me.gladwell.eclipse.m2e.android.androidDevelopmentToolsProjectConfigurator</id>
										</configurator>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
        </pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.lewisd</groupId>
				<artifactId>lint-maven-plugin</artifactId>
			</plugin>
		</plugins>
    </build>  

    <profiles>
		<profile>
			<id>cobertura</id>
			<properties>
				<sonar.branch>robolectric</sonar.branch>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.core.codeCoveragePlugin>cobertura</sonar.core.codeCoveragePlugin>
				<sonar.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.cobertura.reportPath>
			</properties>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${cobertura.version}</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>
</project>
