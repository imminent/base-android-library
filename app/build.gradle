import junit.framework.Test

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.+'
    }
}

apply plugin: 'android-library'
//apply plugin: 'sonar-runner'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

repositories {
    mavenCentral()
}

configurations {
    apt
    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
}

dependencies {
    apt 'com.squareup.dagger:dagger-compiler:1.1.0'

    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.google.guava:guava:15.+'
    compile 'com.jakewharton:butterknife:3.+'
    compile 'com.google.code.findbugs:annotations:2.+'
    compile ('de.keyboardsurfer.android.widget:crouton:1.+') {
        exclude module: 'support-v4'
        compile 'com.android.support:support-v4:18.+'
    }

    // Google Play Services
    compile 'com.google.android.gms:play-services:3.2.65'
    compile 'com.squareup.dagger:dagger:1.1.0'
    compile 'com.squareup:otto:1.3.4'

    unitTestCompile files("$project.buildDir/classes/debug")
    unitTestCompile fileTree(dir: 'unitTest/libs', include: '*.jar')
    unitTestCompile 'com.google.guava:guava:15.+'
    unitTestCompile 'junit:junit:4.10', 'org.mockito:mockito-core:1.9.5'
    unitTestCompile 'com.google.android:android:4.1.1.4'
    unitTestCompile 'org.hamcrest:hamcrest-core:1.3'
    unitTestCompile 'com.squareup:fest-android:1.0.7'
    configurations.unitTestCompile.exclude group: 'com.google.android.maps'
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 18
    }
}

// Sets up unit testing for android plugin
sourceSets {
    unitTest {
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/resources')
    }
}

task unitTest(type:Test, dependsOn: assemble) {
    description = "run unit tests"
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
}

check.dependsOn unitTest

// Sets up Sonar plugin
//sonarRunner {
//    sonarProperties {
//        property "sonar.sourceEncoding", "UTF-8"
//        property "sonar.host.url", "http://localhost:9000"
//        property "sonar.jdbc.url", "jdbc:postgresql://localhost/sonar"
//        property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
//        property "sonar.jdbc.username", "sonar"
//        property "sonar.jdbc.password", "sonar"
//    }
//}

// Sets up find bugs plugin
findbugs {
    includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
    excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}

// Sets up pmd plugin
pmd {
    ruleSetFiles = files("$rootProject.projectDir/config/pmd/ruleset.xml")
}

// Wrapper task that sets up gradlew script (use ./gradlew in place of gradle command)
task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}